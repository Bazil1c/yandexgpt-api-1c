
#Область СлужебныйПрограммныйИнтерфейс

// Записывает запрос и ответ в журнале.
//
// Параметры:
//  Контекст   - Структура - См. ус_HttpСервисы.НовыйКонтекстЗапроса.
//  Ответ   - HTTPОтвет - Ответ.
//
Процедура ЗарегистрироватьЗапрос(Запрос, Ответ) Экспорт 
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("HttpЗапросы.Логирование") Тогда 

		Модуль = ОбщегоНазначения.ОбщийМодуль("HttpЗапросыЛогирование");
		Модуль.ЗарегистрироватьОтвет(Запрос, Ответ);
		
	Иначе
		
		ЗаписатьЗапросВЖурналРегистрации(Запрос, Ответ)
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьЗапросВЖурналРегистрации(Запрос, Ответ)
	
	ШаблонЗапроса = "Адрес ресурса: %1
		|Метод: %2
		|Заголовки: %3
		|Тело запроса: %4";
	//
	//ЗаголовкиЗапроса = ЗаголовкиСтрокой(Запрос.Заголовки);
	//
	//Описание = СтрШаблон(ШаблонЗапроса, ПараметрыЗапроса.АдресРесурса, ПараметрыЗапроса.Метод,
	//	ЗаголовкиЗапроса, ПараметрыЗапроса.ТелоЗапроса);
	//	
	//ИмяСобытия = СтрШаблон("%1.Запрос", ПараметрыЗапроса.СобытиеЖурналаРегистрации);
	//	
	//ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Информация, , , Описание);
	//	
КонецПроцедуры

// Записывает ответ сервера в ЖР.
//
// Параметры:
//  ПараметрыЗапроса  - Структура - См. НовыеПараметрыЗапроса().
//  Ответ   - HTTPОтвет - Ответ сервера.
//
Процедура ЗаписатьОтветВЖурналРегистрации(ПараметрыЗапроса, Ответ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Описание = ОписаниеОтвета(Ответ);
	
	ИмяСобытия = СтрШаблон("%1.Ответа на запрос", ПараметрыЗапроса.СобытиеЖурналаРегистрации);
	
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Информация, , , Описание);

КонецПроцедуры

// Возвращает заголовки запроса или ответа в виде строки с разделителями.
//
// Параметры:
//  Заголовки	 - Соответствие - Заголовки.
// 
// Возвращаемое значение:
//  Строка - Заголовки строкой
//
Функция ЗаголовкиСтрокой(Заголовки)
	
	Строки = Новый Массив;
	
	Для каждого Заголовок Из Заголовки Цикл
		
		ПредставлениеЗаголовка = СтрШаблон("""%1"":""%2""", Заголовок.Ключ, Заголовок.Значение);
		
		Строки.Добавить(ПредставлениеЗаголовка);	
	
	КонецЦикла; 
	
	ЗаголовкиСтрокой = СтрСоединить(Строки, "; ");
	
	Возврат ЗаголовкиСтрокой;

КонецФункции

// Формирует строковое описание ответа сервера.
//
// Параметры:
//  Ответ   - HTTPОтвет - Ответ сервера.
// 
// Возвращаемое значение:
//  Строка - Описание ответа.
//
Функция ОписаниеОтвета(Ответ)
	
	ШаблонОтвета = "Код состояния: %1
		|Заголовки: %2
		|Тело ответа: %3";
	
	ЗаголовкиОтвета = ЗаголовкиСтрокой(Ответ.Заголовки);
	ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
	
	ОписаниеОтвета = СтрШаблон(ШаблонОтвета, Ответ.КодСостояния, ЗаголовкиОтвета, ТелоОтвета);
	
	Возврат ОписаниеОтвета;

КонецФункции 

#КонецОбласти